}
p_values = t(p_values)
results <- list("path_coefs" = path_coefs, "p_values" = p_values, "traits_dfs_pls" = traits_dfs_pls)
return(results)
}
plspm_traits_dfs_2 = function(traits_dfs_df){
traits_blocks = 36:40
dfs_blocks = list(86:94)
presence_blocks = 95
traits_dfs_blocks = append(traits_blocks, dfs_blocks)
traits_dfs_blocks = as.list(append(traits_dfs_blocks, presence_blocks))
traits_modes = rep("A", 5)
dfs_modes = "A"
presence_modes = "A"
traits_dfs_modes = append(traits_modes, dfs_modes)
traits_dfs_modes = append(traits_dfs_modes, presence_modes)
traits_dfs_path = read.csv("path_inner_model_2.csv", header=TRUE, sep=";", row.names = 1)
traits_dfs_path = as.matrix(traits_dfs_path)
rownames(traits_dfs_path) = make.names(rownames(traits_dfs_path))
colnames(traits_dfs_path) = rownames(traits_dfs_path)
traits_dfs_pls = plspm(traits_dfs_df, traits_dfs_path, traits_dfs_blocks, scaled = FALSE )
input_vars = colnames(traits_dfs_path)[1:5]
output_vars = colnames(traits_dfs_path)[6:7]
path_coefs = traits_dfs_pls$path_coefs[output_vars, input_vars]
p_values = matrix(nrow=length(input_vars), ncol=length(output_vars))
rownames(p_values) = input_vars
colnames(p_values) = output_vars
p_values = data.frame(p_values)
for(var in output_vars){
p_values[,var] = traits_dfs_pls$inner_model[[var]][2:(length(input_vars)+1),4]
}
p_values = t(p_values)
results <- list("path_coefs" = path_coefs, "p_values" = p_values, "traits_dfs_pls" = traits_dfs_pls)
return(results)
}
plspm_traits_dfs_3 = function(traits_dfs_df){
traits_blocks = 36:40
dfs_blocks = c(87, 89, 90, 92, 93, 94)
presence_blocks = 95
traits_dfs_blocks = append(traits_blocks, dfs_blocks)
traits_dfs_blocks = as.list(append(traits_dfs_blocks, presence_blocks))
traits_modes = rep("A", 5)
dfs_modes = rep("A", 6)
presence_modes = "A"
traits_dfs_modes = append(traits_modes, dfs_modes)
traits_dfs_modes = append(traits_dfs_modes, presence_modes)
traits_dfs_path = read.csv("path_inner_model_3.csv", header=TRUE, sep=";", row.names = 1)
traits_dfs_path = as.matrix(traits_dfs_path)
rownames(traits_dfs_path) = make.names(rownames(traits_dfs_path))
colnames(traits_dfs_path) = rownames(traits_dfs_path)
traits_dfs_pls = plspm(traits_dfs_df, traits_dfs_path, traits_dfs_blocks, scaled = FALSE )
input_vars = colnames(traits_dfs_path)[1:5]
output_vars = colnames(traits_dfs_path)[6:12]
path_coefs = traits_dfs_pls$path_coefs[output_vars, input_vars]
p_values = matrix(nrow=length(input_vars), ncol=length(output_vars))
rownames(p_values) = input_vars
colnames(p_values) = output_vars
p_values = data.frame(p_values)
for(var in output_vars){
p_values[,var] = traits_dfs_pls$inner_model[[var]][2:(length(input_vars)+1),4]
}
p_values = t(p_values)
results <- list("path_coefs" = path_coefs, "p_values" = p_values, "traits_dfs_pls" = traits_dfs_pls)
return(results)
}
plspm_traits_dfs_4 = function(traits_dfs_df){
traits_blocks = 36:40
dfs_blocks = list(c(87, 89, 90, 92, 93, 94))
presence_blocks = 95
traits_dfs_blocks = append(traits_blocks, dfs_blocks)
traits_dfs_blocks = as.list(append(traits_dfs_blocks, presence_blocks))
traits_modes = rep("A", 5)
dfs_modes = "A"
presence_modes = "A"
traits_dfs_modes = append(traits_modes, dfs_modes)
traits_dfs_modes = append(traits_dfs_modes, presence_modes)
traits_dfs_path = read.csv("path_inner_model_2.csv", header=TRUE, sep=";", row.names = 1)
traits_dfs_path = as.matrix(traits_dfs_path)
rownames(traits_dfs_path) = make.names(rownames(traits_dfs_path))
colnames(traits_dfs_path) = rownames(traits_dfs_path)
traits_dfs_pls = plspm(traits_dfs_df, traits_dfs_path, traits_dfs_blocks, scaled = FALSE )
input_vars = colnames(traits_dfs_path)[1:5]
output_vars = colnames(traits_dfs_path)[6:7]
path_coefs = traits_dfs_pls$path_coefs[output_vars, input_vars]
p_values = matrix(nrow=length(input_vars), ncol=length(output_vars))
rownames(p_values) = input_vars
colnames(p_values) = output_vars
p_values = data.frame(p_values)
for(var in output_vars){
p_values[,var] = traits_dfs_pls$inner_model[[var]][2:(length(input_vars)+1),4]
}
p_values = t(p_values)
results <- list("path_coefs" = path_coefs, "p_values" = p_values, "traits_dfs_pls" = traits_dfs_pls)
return(results)
}
plspm_traits_dfs_5 = function(traits_dfs_df){
traits_blocks = 36:40
dfs_blocks = c(87, 88, 89, 94)
presence_blocks = 95
traits_dfs_blocks = append(traits_blocks, dfs_blocks)
traits_dfs_blocks = as.list(append(traits_dfs_blocks, presence_blocks))
traits_modes = rep("A", 5)
dfs_modes = rep("A", 4)
presence_modes = "A"
traits_dfs_modes = append(traits_modes, dfs_modes)
traits_dfs_modes = append(traits_dfs_modes, presence_modes)
traits_dfs_path = read.csv("path_inner_model_4.csv", header=TRUE, sep=";", row.names = 1)
traits_dfs_path = as.matrix(traits_dfs_path)
rownames(traits_dfs_path) = make.names(rownames(traits_dfs_path))
colnames(traits_dfs_path) = rownames(traits_dfs_path)
traits_dfs_pls = plspm(traits_dfs_df, traits_dfs_path, traits_dfs_blocks, scaled = FALSE )
input_vars = colnames(traits_dfs_path)[1:5]
output_vars = colnames(traits_dfs_path)[6:10]
path_coefs = traits_dfs_pls$path_coefs[output_vars, input_vars]
p_values = matrix(nrow=length(input_vars), ncol=length(output_vars))
rownames(p_values) = input_vars
colnames(p_values) = output_vars
p_values = data.frame(p_values)
for(var in output_vars){
p_values[,var] = traits_dfs_pls$inner_model[[var]][2:(length(input_vars)+1),4]
}
p_values = t(p_values)
results <- list("path_coefs" = path_coefs, "p_values" = p_values, "traits_dfs_pls" = traits_dfs_pls)
return(results)
}
plspm_traits_dfs_6 = function(traits_dfs_df){
traits_blocks = 36:40
dfs_blocks = list(c(87, 88, 89, 94))
presence_blocks = 95
traits_dfs_blocks = append(traits_blocks, dfs_blocks)
traits_dfs_blocks = as.list(append(traits_dfs_blocks, presence_blocks))
traits_modes = rep("A", 5)
dfs_modes = "A"
presence_modes = "A"
traits_dfs_modes = append(traits_modes, dfs_modes)
traits_dfs_modes = append(traits_dfs_modes, presence_modes)
traits_dfs_path = read.csv("path_inner_model_2.csv", header=TRUE, sep=";", row.names = 1)
traits_dfs_path = as.matrix(traits_dfs_path)
rownames(traits_dfs_path) = make.names(rownames(traits_dfs_path))
colnames(traits_dfs_path) = rownames(traits_dfs_path)
traits_dfs_pls = plspm(traits_dfs_df, traits_dfs_path, traits_dfs_blocks, scaled = FALSE )
input_vars = colnames(traits_dfs_path)[1:5]
output_vars = colnames(traits_dfs_path)[6:7]
path_coefs = traits_dfs_pls$path_coefs[output_vars, input_vars]
p_values = matrix(nrow=length(input_vars), ncol=length(output_vars))
rownames(p_values) = input_vars
colnames(p_values) = output_vars
p_values = data.frame(p_values)
for(var in output_vars){
p_values[,var] = traits_dfs_pls$inner_model[[var]][2:(length(input_vars)+1),4]
}
p_values = t(p_values)
results <- list("path_coefs" = path_coefs, "p_values" = p_values, "traits_dfs_pls" = traits_dfs_pls)
return(results)
}
plot_plspm_traits_dfs = function(path_coefs, p_values, significative_level = 0.05, title = "", color_lim)
{
corrplot(path_coefs, title=title,
sig.level = significative_level, p.mat = p_values,
is.corr = FALSE, cl.lim = color_lim, col=brewer.pal(n=8, name="PuOr"),
insig = "blank",  mar=c(0,0,2,0))
}
pls_analysis = function(aesthetic_df, narrative_df, objectives_df, type=1, color_lim = c(-1, 1)){
if(type==1){
aesthetic_pls = plspm_traits_dfs(aesthetic_df)
narrative_pls = plspm_traits_dfs(narrative_df)
objectives_pls = plspm_traits_dfs(objectives_df)
}else if(type==2){
aesthetic_pls = plspm_traits_dfs_2(aesthetic_df)
narrative_pls = plspm_traits_dfs_2(narrative_df)
objectives_pls = plspm_traits_dfs_2(objectives_df)
}else if(type==3){
aesthetic_pls = plspm_traits_dfs_3(aesthetic_df)
narrative_pls = plspm_traits_dfs_3(narrative_df)
objectives_pls = plspm_traits_dfs_3(objectives_df)
}else if(type==4){
aesthetic_pls = plspm_traits_dfs_4(aesthetic_df)
narrative_pls = plspm_traits_dfs_4(narrative_df)
objectives_pls = plspm_traits_dfs_4(objectives_df)
}else if(type==5){
aesthetic_pls = plspm_traits_dfs_5(aesthetic_df)
narrative_pls = plspm_traits_dfs_5(narrative_df)
objectives_pls = plspm_traits_dfs_5(objectives_df)
}else if(type==6){
aesthetic_pls = plspm_traits_dfs_6(aesthetic_df)
narrative_pls = plspm_traits_dfs_6(narrative_df)
objectives_pls = plspm_traits_dfs_6(objectives_df)
}
par(mfrow = c(1,3))
plot_plspm_traits_dfs(aesthetic_pls$path_coefs, aesthetic_pls$p_values, title = "Aesthetic scenario", color_lim = color_lim)
plot_plspm_traits_dfs(narrative_pls$path_coefs, narrative_pls$p_values, title = "Narrative scenario", color_lim = color_lim)
plot_plspm_traits_dfs(objectives_pls$path_coefs, objectives_pls$p_values, title = "Objectives scenario", color_lim = color_lim)
mtext("Significative level = 0.05", line=-6, outer = TRUE)
par(mfrow=c(1,3))
plot_plspm_traits_dfs(aesthetic_pls$path_coefs, aesthetic_pls$p_values, significative_level = 0.1 ,title = "Aesthetic scenario", color_lim = color_lim)
plot_plspm_traits_dfs(narrative_pls$path_coefs, narrative_pls$p_values, significative_level = 0.1, title = "Narrative scenario", color_lim = color_lim)
plot_plspm_traits_dfs(objectives_pls$path_coefs, objectives_pls$p_values, significative_level = 0.1, title = "Objectives scenario", color_lim = color_lim)
mtext("Significative level = 0.10", line = -6, outer = TRUE)
}
pls_analysis(aesthetic_third, narrative_third, objectives_third, , color_lim = NULL)
pls_analysis(aesthetic_third, narrative_third, objectives_third, , color_lim = c(-1, 1.05))
pls_analysis(aesthetic_third, narrative_third, objectives_third, color_lim = c(-1, 1.05))
pls_analysis(aesthetic_second, narrative_second, objectives_second, color_lim = c(-1, 1.05))
source("LoadData.R", encoding = "UTF-8")
source("Stats_functions.R")
source("PLS_functions.R")
hist(aesthetic_df$aesthetic, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Esthétique", xlab="Score Esthétique")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$aesthetic)$p.value, 3)), line = -2)
hist(aesthetic_df$challenge, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Défi", xlab="Score Défi")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$challenge)$p.value, 3)), line = -2)
hist(aesthetic_df$narrative, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Narration", xlab="Score Narration")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$narrative)$p.value, 3)), line = -2)
hist(aesthetic_df$objectives, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Objectifs", xlab="Score Objectifs")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$objectives)$p.value, 3)), line = -2)
hist(aesthetic_df$social, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Social", xlab="Score Social")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$social)$p.value, 3)), line = -2)
scenario_bp("challenge_skill_balance")
scenario_bp("action_awareness")
scenario_bp("clear_goals")
scenario_bp("unambiguous_feedback")
scenario_bp("concentration")
scenario_bp("sense_of_control")
scenario_bp("loss_self_consciousness")
scenario_bp("time_transformation")
scenario_bp("autotelic_experience")
scenario_bp("engagement", y_range=c(0, 7))
order_bp("challenge_skill_balance")
order_bp("action_awareness")
order_bp("clear_goals")
order_bp("unambiguous_feedback")
order_bp("concentration")
order_bp("sense_of_control")
order_bp("loss_self_consciousness")
order_bp("time_transformation")
order_bp("autotelic_experience")
order_bp("engagement", y_range=c(0, 7))
scenario_order_bp("challenge_skill_balance", order = 1)
scenario_order_bp("action_awareness", order = 1)
scenario_order_bp("clear_goals", order = 1)
scenario_order_bp("unambiguous_feedback", order = 1)
scenario_order_bp("concentration", order = 1)
scenario_order_bp("sense_of_control", order = 1)
scenario_order_bp("loss_self_consciousness", order = 1)
scenario_order_bp("time_transformation", order = 1)
scenario_order_bp("autotelic_experience", order = 1)
scenario_order_bp("engagement", y_range=c(0, 7), order = 1)
scenario_order_bp("challenge_skill_balance", order = 2)
scenario_order_bp("action_awareness", order = 2)
scenario_order_bp("clear_goals", order = 2)
scenario_order_bp("unambiguous_feedback", order = 2)
scenario_order_bp("concentration", order = 2)
scenario_order_bp("sense_of_control", order = 2)
scenario_order_bp("loss_self_consciousness", order = 2)
scenario_order_bp("time_transformation", order = 2)
scenario_order_bp("autotelic_experience", order = 2)
scenario_order_bp("engagement", y_range=c(0, 7), order = 2)
scenario_order_bp("challenge_skill_balance", order = 3)
scenario_order_bp("action_awareness", order = 3)
scenario_order_bp("clear_goals", order = 3)
scenario_order_bp("unambiguous_feedback", order = 3)
scenario_order_bp("concentration", order = 3)
scenario_order_bp("sense_of_control", order = 3)
scenario_order_bp("loss_self_consciousness", order = 3)
scenario_order_bp("time_transformation", order = 3)
scenario_order_bp("autotelic_experience", order = 3)
scenario_order_bp("engagement", y_range=c(0, 7), order = 3)
order_scenario_bp("challenge_skill_balance", scenario = "aesthetic")
order_scenario_bp("action_awareness", scenario = "aesthetic")
order_scenario_bp("clear_goals", scenario = "aesthetic")
order_scenario_bp("unambiguous_feedback", scenario = "aesthetic")
order_scenario_bp("concentration", scenario = "aesthetic")
order_scenario_bp("sense_of_control", scenario = "aesthetic")
order_scenario_bp("loss_self_consciousness", scenario = "aesthetic")
order_scenario_bp("time_transformation", scenario = "aesthetic")
order_scenario_bp("autotelic_experience", scenario = "aesthetic")
order_scenario_bp("engagement", y_range=c(0, 7), scenario = "aesthetic")
order_scenario_bp("challenge_skill_balance", scenario = "narrative")
order_scenario_bp("action_awareness", scenario = "narrative")
order_scenario_bp("clear_goals", scenario = "narrative")
order_scenario_bp("unambiguous_feedback", scenario = "narrative")
order_scenario_bp("concentration", scenario = "narrative")
order_scenario_bp("sense_of_control", scenario = "narrative")
order_scenario_bp("loss_self_consciousness", scenario = "narrative")
order_scenario_bp("time_transformation", scenario = "narrative")
order_scenario_bp("autotelic_experience", scenario = "narrative")
order_scenario_bp("engagement", y_range=c(0, 7), scenario = "narrative")
order_scenario_bp("challenge_skill_balance", scenario = "objectives")
order_scenario_bp("action_awareness", scenario = "objectives")
order_scenario_bp("clear_goals", scenario = "objectives")
order_scenario_bp("unambiguous_feedback", scenario = "objectives")
order_scenario_bp("concentration", scenario = "objectives")
order_scenario_bp("sense_of_control", scenario = "objectives")
order_scenario_bp("loss_self_consciousness", scenario = "objectives")
order_scenario_bp("time_transformation", scenario = "objectives")
order_scenario_bp("autotelic_experience", scenario = "objectives")
order_scenario_bp("engagement", y_range=c(0, 7), scenario = "objectives")
pls_analysis(aesthetic_df, narrative_df, objectives_df)
pls_analysis(aesthetic_first, narrative_first, objectives_first, color_lim = c(-1, 1.05))
pls_analysis(aesthetic_first, narrative_first, objectives_first, color_lim = NULL)
source("LoadData.R", encoding = "UTF-8")
source("Stats_functions.R")
source("PLS_functions.R")
hist(aesthetic_df$aesthetic, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Esthétique", xlab="Score Esthétique")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$aesthetic)$p.value, 3)), line = -2)
hist(aesthetic_df$challenge, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Défi", xlab="Score Défi")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$challenge)$p.value, 3)), line = -2)
hist(aesthetic_df$narrative, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Narration", xlab="Score Narration")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$narrative)$p.value, 3)), line = -2)
hist(aesthetic_df$objectives, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Objectifs", xlab="Score Objectifs")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$objectives)$p.value, 3)), line = -2)
hist(aesthetic_df$social, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Social", xlab="Score Social")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$social)$p.value, 3)), line = -2)
scenario_bp("challenge_skill_balance")
scenario_bp("action_awareness")
scenario_bp("clear_goals")
scenario_bp("unambiguous_feedback")
scenario_bp("concentration")
scenario_bp("sense_of_control")
scenario_bp("loss_self_consciousness")
scenario_bp("time_transformation")
scenario_bp("autotelic_experience")
scenario_bp("engagement", y_range=c(0, 7))
order_bp("challenge_skill_balance")
order_bp("action_awareness")
order_bp("clear_goals")
order_bp("unambiguous_feedback")
order_bp("concentration")
order_bp("sense_of_control")
order_bp("loss_self_consciousness")
order_bp("time_transformation")
order_bp("autotelic_experience")
order_bp("engagement", y_range=c(0, 7))
scenario_order_bp("challenge_skill_balance", order = 1)
scenario_order_bp("action_awareness", order = 1)
scenario_order_bp("clear_goals", order = 1)
scenario_order_bp("unambiguous_feedback", order = 1)
scenario_order_bp("concentration", order = 1)
scenario_order_bp("sense_of_control", order = 1)
scenario_order_bp("loss_self_consciousness", order = 1)
scenario_order_bp("time_transformation", order = 1)
scenario_order_bp("autotelic_experience", order = 1)
scenario_order_bp("engagement", y_range=c(0, 7), order = 1)
scenario_order_bp("challenge_skill_balance", order = 2)
scenario_order_bp("action_awareness", order = 2)
scenario_order_bp("clear_goals", order = 2)
scenario_order_bp("unambiguous_feedback", order = 2)
scenario_order_bp("concentration", order = 2)
scenario_order_bp("sense_of_control", order = 2)
scenario_order_bp("loss_self_consciousness", order = 2)
scenario_order_bp("time_transformation", order = 2)
scenario_order_bp("autotelic_experience", order = 2)
scenario_order_bp("engagement", y_range=c(0, 7), order = 2)
scenario_order_bp("challenge_skill_balance", order = 3)
scenario_order_bp("action_awareness", order = 3)
scenario_order_bp("clear_goals", order = 3)
scenario_order_bp("unambiguous_feedback", order = 3)
scenario_order_bp("concentration", order = 3)
scenario_order_bp("sense_of_control", order = 3)
scenario_order_bp("loss_self_consciousness", order = 3)
scenario_order_bp("time_transformation", order = 3)
scenario_order_bp("autotelic_experience", order = 3)
scenario_order_bp("engagement", y_range=c(0, 7), order = 3)
order_scenario_bp("challenge_skill_balance", scenario = "aesthetic")
order_scenario_bp("action_awareness", scenario = "aesthetic")
order_scenario_bp("clear_goals", scenario = "aesthetic")
order_scenario_bp("unambiguous_feedback", scenario = "aesthetic")
order_scenario_bp("concentration", scenario = "aesthetic")
order_scenario_bp("sense_of_control", scenario = "aesthetic")
order_scenario_bp("loss_self_consciousness", scenario = "aesthetic")
order_scenario_bp("time_transformation", scenario = "aesthetic")
order_scenario_bp("autotelic_experience", scenario = "aesthetic")
order_scenario_bp("engagement", y_range=c(0, 7), scenario = "aesthetic")
order_scenario_bp("challenge_skill_balance", scenario = "narrative")
order_scenario_bp("action_awareness", scenario = "narrative")
order_scenario_bp("clear_goals", scenario = "narrative")
order_scenario_bp("unambiguous_feedback", scenario = "narrative")
order_scenario_bp("concentration", scenario = "narrative")
order_scenario_bp("sense_of_control", scenario = "narrative")
order_scenario_bp("loss_self_consciousness", scenario = "narrative")
order_scenario_bp("time_transformation", scenario = "narrative")
order_scenario_bp("autotelic_experience", scenario = "narrative")
order_scenario_bp("engagement", y_range=c(0, 7), scenario = "narrative")
order_scenario_bp("challenge_skill_balance", scenario = "objectives")
order_scenario_bp("action_awareness", scenario = "objectives")
order_scenario_bp("clear_goals", scenario = "objectives")
order_scenario_bp("unambiguous_feedback", scenario = "objectives")
order_scenario_bp("concentration", scenario = "objectives")
order_scenario_bp("sense_of_control", scenario = "objectives")
order_scenario_bp("loss_self_consciousness", scenario = "objectives")
order_scenario_bp("time_transformation", scenario = "objectives")
order_scenario_bp("autotelic_experience", scenario = "objectives")
order_scenario_bp("engagement", y_range=c(0, 7), scenario = "objectives")
pls_analysis(aesthetic_df, narrative_df, objectives_df)
pls_analysis(aesthetic_first, narrative_first, objectives_first, color_lim = NULL)
pls_analysis(aesthetic_second, narrative_second, objectives_second, color_lim = NULL)
pls_analysis(aesthetic_third, narrative_third, objectives_third, color_lim = NULL)
pls_analysis(bind_rows(aesthetic_second, aesthetic_third),
bind_rows(narrative_second, narrative_third),
bind_rows(objectives_second, objectives_third))
pls_analysis(bind_rows(aesthetic_second, aesthetic_third),
bind_rows(narrative_second, narrative_third),
bind_rows(objectives_second, objectives_third))
plot_plspm_traits_dfs = function(path_coefs, p_values, significative_level = 0.05, title = "", color_lim)
{
corrplot(path_coefs, title=title, method="number",
sig.level = significative_level, p.mat = p_values,
is.corr = FALSE, cl.lim = color_lim, col=brewer.pal(n=8, name="PuOr"),
insig = "blank",  mar=c(0,0,2,0))
}
pls_analysis(bind_rows(aesthetic_second, aesthetic_third),
bind_rows(narrative_second, narrative_third),
bind_rows(objectives_second, objectives_third))
source("LoadData.R", encoding = "UTF-8")
source("Stats_functions.R")
source("PLS_functions.R")
hist(aesthetic_df$aesthetic, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Esthétique", xlab="Score Esthétique")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$aesthetic)$p.value, 3)), line = -2)
hist(aesthetic_df$challenge, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Défi", xlab="Score Défi")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$challenge)$p.value, 3)), line = -2)
hist(aesthetic_df$narrative, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Narration", xlab="Score Narration")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$narrative)$p.value, 3)), line = -2)
hist(aesthetic_df$objectives, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Objectifs", xlab="Score Objectifs")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$objectives)$p.value, 3)), line = -2)
hist(aesthetic_df$social, xlim=c(0, 100), ylim=c(0, 15), main="Répartition du score Social", xlab="Score Social")
mtext(paste("Shapiro-Wilk normality test", round(shapiro.test(aesthetic_df$social)$p.value, 3)), line = -2)
scenario_bp("challenge_skill_balance")
scenario_bp("action_awareness")
scenario_bp("clear_goals")
scenario_bp("unambiguous_feedback")
scenario_bp("concentration")
scenario_bp("sense_of_control")
scenario_bp("loss_self_consciousness")
scenario_bp("time_transformation")
scenario_bp("autotelic_experience")
scenario_bp("engagement", y_range=c(0, 7))
order_bp("challenge_skill_balance")
order_bp("action_awareness")
order_bp("clear_goals")
order_bp("unambiguous_feedback")
order_bp("concentration")
order_bp("sense_of_control")
order_bp("loss_self_consciousness")
order_bp("time_transformation")
order_bp("autotelic_experience")
order_bp("engagement", y_range=c(0, 7))
scenario_order_bp("challenge_skill_balance", order = 1)
scenario_order_bp("action_awareness", order = 1)
scenario_order_bp("clear_goals", order = 1)
scenario_order_bp("unambiguous_feedback", order = 1)
scenario_order_bp("concentration", order = 1)
scenario_order_bp("sense_of_control", order = 1)
scenario_order_bp("loss_self_consciousness", order = 1)
scenario_order_bp("time_transformation", order = 1)
scenario_order_bp("autotelic_experience", order = 1)
scenario_order_bp("engagement", y_range=c(0, 7), order = 1)
scenario_order_bp("challenge_skill_balance", order = 2)
scenario_order_bp("action_awareness", order = 2)
scenario_order_bp("clear_goals", order = 2)
scenario_order_bp("unambiguous_feedback", order = 2)
scenario_order_bp("concentration", order = 2)
scenario_order_bp("sense_of_control", order = 2)
scenario_order_bp("loss_self_consciousness", order = 2)
scenario_order_bp("time_transformation", order = 2)
scenario_order_bp("autotelic_experience", order = 2)
scenario_order_bp("engagement", y_range=c(0, 7), order = 2)
scenario_order_bp("challenge_skill_balance", order = 3)
scenario_order_bp("action_awareness", order = 3)
scenario_order_bp("clear_goals", order = 3)
scenario_order_bp("unambiguous_feedback", order = 3)
scenario_order_bp("concentration", order = 3)
scenario_order_bp("sense_of_control", order = 3)
scenario_order_bp("loss_self_consciousness", order = 3)
scenario_order_bp("time_transformation", order = 3)
scenario_order_bp("autotelic_experience", order = 3)
scenario_order_bp("engagement", y_range=c(0, 7), order = 3)
order_scenario_bp("challenge_skill_balance", scenario = "aesthetic")
order_scenario_bp("action_awareness", scenario = "aesthetic")
order_scenario_bp("clear_goals", scenario = "aesthetic")
order_scenario_bp("unambiguous_feedback", scenario = "aesthetic")
order_scenario_bp("concentration", scenario = "aesthetic")
order_scenario_bp("sense_of_control", scenario = "aesthetic")
order_scenario_bp("loss_self_consciousness", scenario = "aesthetic")
order_scenario_bp("time_transformation", scenario = "aesthetic")
order_scenario_bp("autotelic_experience", scenario = "aesthetic")
order_scenario_bp("engagement", y_range=c(0, 7), scenario = "aesthetic")
order_scenario_bp("challenge_skill_balance", scenario = "narrative")
order_scenario_bp("action_awareness", scenario = "narrative")
order_scenario_bp("clear_goals", scenario = "narrative")
order_scenario_bp("unambiguous_feedback", scenario = "narrative")
order_scenario_bp("concentration", scenario = "narrative")
order_scenario_bp("sense_of_control", scenario = "narrative")
order_scenario_bp("loss_self_consciousness", scenario = "narrative")
order_scenario_bp("time_transformation", scenario = "narrative")
order_scenario_bp("autotelic_experience", scenario = "narrative")
order_scenario_bp("engagement", y_range=c(0, 7), scenario = "narrative")
order_scenario_bp("challenge_skill_balance", scenario = "objectives")
order_scenario_bp("action_awareness", scenario = "objectives")
order_scenario_bp("clear_goals", scenario = "objectives")
order_scenario_bp("unambiguous_feedback", scenario = "objectives")
order_scenario_bp("concentration", scenario = "objectives")
order_scenario_bp("sense_of_control", scenario = "objectives")
order_scenario_bp("loss_self_consciousness", scenario = "objectives")
order_scenario_bp("time_transformation", scenario = "objectives")
order_scenario_bp("autotelic_experience", scenario = "objectives")
order_scenario_bp("engagement", y_range=c(0, 7), scenario = "objectives")
pls_analysis(aesthetic_df, narrative_df, objectives_df)
pls_analysis(aesthetic_first, narrative_first, objectives_first, color_lim = NULL)
pls_analysis(aesthetic_second, narrative_second, objectives_second, color_lim = NULL)
pls_analysis(aesthetic_third, narrative_third, objectives_third, color_lim = NULL)
pls_analysis(bind_rows(aesthetic_second, aesthetic_third),
bind_rows(narrative_second, narrative_third),
bind_rows(objectives_second, objectives_third))
