skip = 4)
View(DFS_TPI)
View(DFS_TPI)
View(DFS_TPI)
View(X5_Traits)
View(DFS_TPI)
View(DFS_TPI)
library(readxl)
X5_Traits <- read_excel("5_Traits.xlsx",
col_types = c("numeric", "text", "text",
"text", "numeric", "text", "text",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "skip", "numeric",
"numeric", "numeric", "numeric",
"numeric", "skip", "numeric"))
View(X5_Traits)
library(readxl)
DFS_TPI <- read_excel("DFS_TPI.xlsx", col_types = c("date",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "skip", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
View(DFS_TPI)
View(DFS_TPI)
View(DFS_TPI)
library(readxl)
DFS_TPI <- read_excel("DFS_TPI.xlsx", col_types = c("date",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "skip", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"), na = "-1",
skip = 4)
View(DFS_TPI)
library(readxl)
DFS_TPI <- read_excel("DFS_TPI.xlsx", col_types = c("date",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "skip", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
View(DFS_TPI)
library(readxl)
X5_Traits <- read_excel("5_Traits.xlsx",
col_types = c("date", "text", "text",
"text", "numeric", "text", "text",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "skip", "numeric",
"numeric", "numeric", "numeric",
"numeric", "skip", "numeric"))
View(X5_Traits)
DFS_TPI <- DFS_TPI[5:]
DFS_TPI <- DFS_TPI[5:88]
DFS_TPI <- DFS_TPI[:][5:88]
DFS_TPI[$x]
DFS_TPI[DFS_TPI$x]
print(DFS_TPI)
print(DFS_TPI[1,2])
print(DFS_TPI[[5]])
print(DFS_TPI[5[]])
print(DFS_TPI[5])
print(DFS_TPI[5,])
DFS_TPI <- DFS_TPI[5,]
library(readxl)
X5_Traits <- read_excel("5_Traits.xlsx",
col_types = c("date", "text", "text",
"text", "numeric", "text", "text",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "skip", "numeric",
"numeric", "numeric", "numeric",
"numeric", "skip", "numeric"))
View(X5_Traits)
DFS_TPI <- DFS_TPI[5:,]
DFS_TPI <- DFS_TPI[>5,]
DFS_TPI <- DFS_TPI[DFS_TPI$Horodateur>"2021-05-21",]
"numeric", "skip", "numeric"))
library(readxl)
DFS_TPI <- read_excel("DFS_TPI.xlsx")
View(DFS_TPI)
DFS_TPI <- DFS_TPI[DFS_TPI$Horodateur>"2021-05-21",]
X5_Traits <- X5_Traits[X5_Traits$Horodateur>"2021-05-21",]
DFS_TPI[1,]
DFS_TPI[1,2:5]
DFS_TPI[1,49:57]
X5_Traits[1, 35:40]
library(tidyverse)
install.package("dplyr")
install.packages("tidyverse")
View(X5_Traits)
distinct(X5_Traits, "Adresse e-mail")
library(dplyr)
distinct(X5_Traits, "Adresse e-mail")
print(distinct(X5_Traits))
select(X5_Traits, 5:)
select(X5_Traits, 5:count(X5_Traits))
count(X5_Traits$`Adresse e-mail`)
print(distinct(X5_Traits, X5_Traits$`Adresse e-mail`))
print(distinct(X5_Traits, X5_Traits$Horodateur))
print(distinct(X5_Traits, X5_Traits$`Adresse e-mail`))
print(distinct(X5_Traits, X5_Traits$`Adresse e-mail`, TRUE))
print(distinct(X5_Traits$`Adresse e-mail`))
print(distinct(X5_Traits$`Adresse e-mail`)
print(distinct(X5_Traits))
print(distinct_at(X5_Traits, X5_Traits$`Adresse e-mail`))
help(distinct_at)
distinct_at(X5_Traits, X5_Traits$`Adresse e-mail`)
distinct_at(X5_Traits, X5_Traits$Horodateur)
distinct_at(X5_Traits, vars(X5_Traits$`Adresse e-mail`))
distinct(X5_Traits, X5_Traits$`Adresse e-mail`)
distinct(X5_Traits, X5_Traits$`Adresse e-mail`, .keep_all = TRUE)
X5_Traits <- distinct(X5_Traits, X5_Traits$`Adresse e-mail`, .keep_all = TRUE)
filter(X5_Traits, X5_Traits$Horodateur >= "2021-05-21")
filter(X5_Traits, X5_Traits$Horodateur >= "2021-05-25")
filter(X5_Traits, X5_Traits$Horodateur >= "2021-05-21")
View(DFS_TPI)
View(DFS_TPI)
filter(DFS_TPI, DFS_TPI$Horodateur >= "2021-05-25")
X5_Traits$`Quel est votre nom de famille ?`[0]
X5_Traits$`Quel est votre nom de famille ?`
X5_Traits$`Quel est votre nom de famille ?`[1]
filter(DFS_TPI$`Challenge-Skill Balance (S)`, DFS_TPI$`Quel est votre nom de famille ?` = X5_Traits$`Quel est votre nom de famille ?`[1])
filter(DFS_TPI$`Challenge-Skill Balance (S)`, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[1])
DFS_TPI$`Quel est votre nom de famille ?`[1]
filter(DFS_TPI$, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[1])
filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[1])
filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[1] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
tolower(DFS_TPI$`Quel est votre prénom ?`)
DFS_TPI$`Quel est votre prénom ?` = tolower(DFS_TPI$`Quel est votre prénom ?`)
DFS_TPI$`Quel est votre prénom ?`
DFS_TPI$`Quel est votre nom de famille ?` = tolower(DFS_TPI$`Quel est votre nom de famille ?`)
X5_Traits$`Quel est votre prénom ?` = tolower(X5_Traits$`Quel est votre prénom ?`)
X5_Traits$`Quel est votre nom de famille ?` = tolower(X5_Traits$`Quel est votre nom de famille ?`)
filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[1] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
param_S <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[1] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
param_S$`Challenge-Skill Balance (S)`
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[1] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
delete(param_S)
panelistOne = new ("panelist", surname=X5_Traits$`Quel est votre nom de famille ?`[1],
forname=X5_Traits$`Quel est votre prénom ?`[1],
aesthetic=X5_Traits$`Score Esthétique`[1], challenge=X5_Traits$`Score Défi`, objective=X5_Traits$`Score Objectifs`,
narrative=X5_Traits$`Score Narratif`, social=X5_Traits$`Score Social`,
S=param_DFS$`Challenge-Skill Balance (S)`, A=param_DFS$`Action Awareness (A)`, G=param_DFS$`Clear Goals (G)`,
U=param_DFS$`Unambiguous Feedback (U)`, C=param_DFS$`Concentration (C)`, O=param_DFS$`Sense of Control (O)`,
L=param_DFS$`Loss of Self-Consciousness (L)`, TT=param_DFS$`Time Transformation (T)`, X=param_DFS$`Autotelic experience (X)`)
panelistOne
print(panelistOne)
source("~/PFE/PFE_Analysis/Correlation.R", encoding = 'UTF-8')
# Erase test data (from before 21st of May)
X5_Traits <- filter(X5_Traits, X5_Traits$Horodateur >= "2021-05-21")
# Erase double from data
X5_Traits <- distinct(X5_Traits, X5_Traits$`Adresse e-mail`, .keep_all = TRUE)
# Erase test data (from before 25th of May)
DFS_TPI <- filter(DFS_TPI, DFS_TPI$Horodateur >= "2021-05-25")
setClass("panelist", slots=list(surname="character", forname="character", aesthetic="numeric",
challenge="numeric", objective="numeric", narrative="numeric", social="numeric",
S="numeric", A="numeric", G="numeric", U="numeric", C="numeric",
O="numeric", L="numeric", TT="numeric", X="numeric"))
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[1] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
panelistOne = new ("panelist", surname=X5_Traits$`Quel est votre nom de famille ?`[1],
forname=X5_Traits$`Quel est votre prénom ?`[1],
aesthetic=X5_Traits$`Score Esthétique`[1], challenge=X5_Traits$`Score Défi`, objective=X5_Traits$`Score Objectifs`,
narrative=X5_Traits$`Score Narratif`, social=X5_Traits$`Score Social`,
S=param_DFS$`Challenge-Skill Balance (S)`, A=param_DFS$`Action Awareness (A)`, G=param_DFS$`Clear Goals (G)`,
U=param_DFS$`Unambiguous Feedback (U)`, C=param_DFS$`Concentration (C)`, O=param_DFS$`Sense of Control (O)`,
L=param_DFS$`Loss of Self-Consciousness (L)`, TT=param_DFS$`Time Transformation (T)`, X=param_DFS$`Autotelic experience (X)`)
print(panelistOne)
setClass("panelist", slots=list(surname="character", forname="character", aesthetic="numeric",
challenge="numeric", objective="numeric", narrative="numeric", social="numeric",
S="numeric", A="numeric", G="numeric", U="numeric", C="numeric",
O="numeric", L="numeric", TT="numeric", X="numeric"))
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[1] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
panelistOne = new ("panelist", surname=X5_Traits$`Quel est votre nom de famille ?`[1],
forname=X5_Traits$`Quel est votre prénom ?`[1],
aesthetic=X5_Traits$`Score Esthétique`[1], challenge=X5_Traits$`Score Défi`, objective=X5_Traits$`Score Objectifs`,
narrative=X5_Traits$`Score Narratif`, social=X5_Traits$`Score Social`,
S=param_DFS$`Challenge-Skill Balance (S)`, A=param_DFS$`Action Awareness (A)`, G=param_DFS$`Clear Goals (G)`,
U=param_DFS$`Unambiguous Feedback (U)`, C=param_DFS$`Concentration (C)`, O=param_DFS$`Sense of Control (O)`,
L=param_DFS$`Loss of Self-Consciousness (L)`, TT=param_DFS$`Time Transformation (T)`, X=param_DFS$`Autotelic experience (X)`)
panelist <- setClass("panelist", slots=list(surname="character", forname="character", aesthetic="numeric",
challenge="numeric", objective="numeric", narrative="numeric", social="numeric",
S="numeric", A="numeric", G="numeric", U="numeric", C="numeric",
O="numeric", L="numeric", TT="numeric", X="numeric"))
panelistOne = panelist(surname=X5_Traits$`Quel est votre nom de famille ?`[1],
forname=X5_Traits$`Quel est votre prénom ?`[1],
aesthetic=X5_Traits$`Score Esthétique`[1], challenge=X5_Traits$`Score Défi`, objective=X5_Traits$`Score Objectifs`,
narrative=X5_Traits$`Score Narratif`, social=X5_Traits$`Score Social`,
S=param_DFS$`Challenge-Skill Balance (S)`, A=param_DFS$`Action Awareness (A)`, G=param_DFS$`Clear Goals (G)`,
U=param_DFS$`Unambiguous Feedback (U)`, C=param_DFS$`Concentration (C)`, O=param_DFS$`Sense of Control (O)`,
L=param_DFS$`Loss of Self-Consciousness (L)`, TT=param_DFS$`Time Transformation (T)`, X=param_DFS$`Autotelic experience (X)`)
panelist <- setClass("panelist", slots=c(surname="character", forname="character", aesthetic="numeric",
challenge="numeric", objective="numeric", narrative="numeric", social="numeric",
S="numeric", A="numeric", G="numeric", U="numeric", C="numeric",
O="numeric", L="numeric", TT="numeric", X="numeric"))
panelistOne = panelist(surname=X5_Traits$`Quel est votre nom de famille ?`[1],
forname=X5_Traits$`Quel est votre prénom ?`[1],
aesthetic=X5_Traits$`Score Esthétique`[1], challenge=X5_Traits$`Score Défi`, objective=X5_Traits$`Score Objectifs`,
narrative=X5_Traits$`Score Narratif`, social=X5_Traits$`Score Social`,
S=param_DFS$`Challenge-Skill Balance (S)`, A=param_DFS$`Action Awareness (A)`, G=param_DFS$`Clear Goals (G)`,
U=param_DFS$`Unambiguous Feedback (U)`, C=param_DFS$`Concentration (C)`, O=param_DFS$`Sense of Control (O)`,
L=param_DFS$`Loss of Self-Consciousness (L)`, TT=param_DFS$`Time Transformation (T)`, X=param_DFS$`Autotelic experience (X)`)
panelistOne <- panelist(surname=X5_Traits$`Quel est votre nom de famille ?`[1],
forname=X5_Traits$`Quel est votre prénom ?`[1],
aesthetic=X5_Traits$`Score Esthétique`[1], challenge=X5_Traits$`Score Défi`, objective=X5_Traits$`Score Objectifs`,
narrative=X5_Traits$`Score Narratif`, social=X5_Traits$`Score Social`,
S=param_DFS$`Challenge-Skill Balance (S)`, A=param_DFS$`Action Awareness (A)`, G=param_DFS$`Clear Goals (G)`,
U=param_DFS$`Unambiguous Feedback (U)`, C=param_DFS$`Concentration (C)`, O=param_DFS$`Sense of Control (O)`,
L=param_DFS$`Loss of Self-Consciousness (L)`, TT=param_DFS$`Time Transformation (T)`, X=param_DFS$`Autotelic experience (X)`)
panelistOne <- panelist(surname=X5_Traits$`Quel est votre nom de famille ?`[1],
forname=X5_Traits$`Quel est votre prénom ?`[1],
aesthetic=X5_Traits$`Score Esthétique`[1], challenge=X5_Traits$`Score Défi`[1], objective=X5_Traits$`Score Objectifs`[1],
narrative=X5_Traits$`Score Narratif`[1], social=X5_Traits$`Score Social`[1],
S=param_DFS$`Challenge-Skill Balance (S)`, A=param_DFS$`Action Awareness (A)`, G=param_DFS$`Clear Goals (G)`,
U=param_DFS$`Unambiguous Feedback (U)`, C=param_DFS$`Concentration (C)`, O=param_DFS$`Sense of Control (O)`,
L=param_DFS$`Loss of Self-Consciousness (L)`, TT=param_DFS$`Time Transformation (T)`, X=param_DFS$`Autotelic experience (X)`)
panelistTwo <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[1], forname = X5_Traits$`Quel est votre prénom ?`[1],
aesthetic = X5_Traits$`Score Esthétique`[1], challenge = X5_Traits$`Score Défi`[1],
objective = X5_Traits$`Score Objectifs`[1], narrative = X5_Traits$`Score Narratif`[1],
social = X5_Traits$`Score Social`[1])
View(panelistTwo)
panelistOne <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[1],
forname = X5_Traits$`Quel est votre prénom ?`[1],
aesthetic = X5_Traits$`Score Esthétique`[1], challenge = X5_Traits$`Score Défi`[1], objective = X5_Traits$`Score Objectifs`[1],
narrative = X5_Traits$`Score Narratif`[1], social = X5_Traits$`Score Social`[1],
S = param_DFS$`Challenge-Skill Balance (S)`, A = param_DFS$`Action Awareness (A)`, G = param_DFS$`Clear Goals (G)`,
U = param_DFS$`Unambiguous Feedback (U)`, C = param_DFS$`Concentration (C)`, O = param_DFS$`Sense of Control (O)`,
L = param_DFS$`Loss of Self-Consciousness (L)`, TT = param_DFS$`Time Transformation (T)`, X = param_DFS$`Autotelic experience (X)`)
param_DFS$`Loss of Self-Consciousness (L)`
View(param_DFS)
panelist <- setClass("panelist", slots=c(surname="character", forname="character", aesthetic="numeric",
challenge="numeric", objective="numeric", narrative="numeric", social="numeric",
skill="numeric", awareness="numeric", goal="numeric", unambiguous="numeric", concentration="numeric",
control="numeric", loss="numeric", transformation="numeric", autotelic="numeric"))
panelistTwo <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[1], forname = X5_Traits$`Quel est votre prénom ?`[1],
aesthetic = X5_Traits$`Score Esthétique`[1], challenge = X5_Traits$`Score Défi`[1],
objective = X5_Traits$`Score Objectifs`[1], narrative = X5_Traits$`Score Narratif`[1],
social = X5_Traits$`Score Social`[1],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
View(panelistTwo)
length(X5_Traits)
panel_list <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
library(readxl)
X5_Traits <- read_excel("5_Traits.xlsx")
View(X5_Traits)
library(readxl)
DFS_TPI <- read_excel("DFS_TPI.xlsx")
View(DFS_TPI)
# Erase test data (from before 21st of May)
X5_Traits <- filter(X5_Traits, X5_Traits$Horodateur >= "2021-05-21")
# Erase double from data
X5_Traits <- distinct(X5_Traits, X5_Traits$`Adresse e-mail`, .keep_all = TRUE)
# Erase test data (from before 25th of May)
DFS_TPI <- filter(DFS_TPI, DFS_TPI$Horodateur >= "2021-05-25")
panelist <- setClass("panelist", slots=c(surname="character", forname="character", aesthetic="numeric",
challenge="numeric", objective="numeric", narrative="numeric", social="numeric",
skill="numeric", awareness="numeric", goal="numeric", unambiguous="numeric", concentration="numeric",
control="numeric", loss="numeric", transformation="numeric", autotelic="numeric"))
panel_list <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
View(panel_list)
View(panel_list)
# Erase test data (from before 21st of May)
X5_Traits <- filter(X5_Traits, X5_Traits$Horodateur >= "2021-05-21")
# Erase double from data
X5_Traits <- distinct(X5_Traits, X5_Traits$`Adresse e-mail`, .keep_all = TRUE)
# Lower all names
X5_Traits$`Quel est votre prénom ?` <- tolower(X5_Traits$`Quel est votre prénom ?`)
X5_Traits$`Quel est votre nom de famille ?` <- tolower(X5_Traits$`Quel est votre nom de famille ?`)
DFS_TPI$`Quel est votre prénom ?` <- tolower(DFS_TPI$`Quel est votre prénom ?`)
DFS_TPI$`Quel est votre nom de famille ?` <- tolower(DFS_TPI$`Quel est votre nom de famille ?`)
# Erase test data (from before 25th of May)
DFS_TPI <- filter(DFS_TPI, DFS_TPI$Horodateur >= "2021-05-25")
panelist <- setClass("panelist", slots=c(surname="character", forname="character", aesthetic="numeric",
challenge="numeric", objective="numeric", narrative="numeric", social="numeric",
skill="numeric", awareness="numeric", goal="numeric", unambiguous="numeric", concentration="numeric",
control="numeric", loss="numeric", transformation="numeric", autotelic="numeric"))
panel_list_objective <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
panel_list_aesthetic <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des portails")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
panel_list_narrative <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Les recherches d'Isidore")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
library(readxl)
library(dplyr)
X5_Traits <- read_excel("5_Traits.xlsx")
DFS_TPI <- read_excel("DFS_TPI.xlsx")
# Erase test data (from before 21st of May)
X5_Traits <- filter(X5_Traits, X5_Traits$Horodateur >= "2021-05-21")
# Erase double from data
X5_Traits <- distinct(X5_Traits, X5_Traits$`Adresse e-mail`, .keep_all = TRUE)
# Lower all names
X5_Traits$`Quel est votre prénom ?` <- tolower(X5_Traits$`Quel est votre prénom ?`)
X5_Traits$`Quel est votre nom de famille ?` <- tolower(X5_Traits$`Quel est votre nom de famille ?`)
DFS_TPI$`Quel est votre prénom ?` <- tolower(DFS_TPI$`Quel est votre prénom ?`)
DFS_TPI$`Quel est votre nom de famille ?` <- tolower(DFS_TPI$`Quel est votre nom de famille ?`)
# Erase test data (from before 25th of May)
DFS_TPI <- filter(DFS_TPI, DFS_TPI$Horodateur >= "2021-05-25")
panelist <- setClass("panelist", slots=c(surname="character", forname="character", aesthetic="numeric",
challenge="numeric", objective="numeric", narrative="numeric", social="numeric",
skill="numeric", awareness="numeric", goal="numeric", unambiguous="numeric", concentration="numeric",
control="numeric", loss="numeric", transformation="numeric", autotelic="numeric"))
panel_list_objective <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
panel_list_aesthetic <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des portails")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
panel_list_narrative <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Les recherches d'Isidore")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
library(readxl)
library(dplyr)
X5_Traits <- read_excel("5_Traits.xlsx")
DFS_TPI <- read_excel("DFS_TPI.xlsx")
# Erase test data (from before 21st of May)
X5_Traits <- filter(X5_Traits, X5_Traits$Horodateur >= "2021-05-21")
# Erase double from data
X5_Traits <- distinct(X5_Traits, X5_Traits$`Adresse e-mail`, .keep_all = TRUE)
# Lower all names
X5_Traits$`Quel est votre prénom ?` <- tolower(X5_Traits$`Quel est votre prénom ?`)
X5_Traits$`Quel est votre nom de famille ?` <- tolower(X5_Traits$`Quel est votre nom de famille ?`)
DFS_TPI$`Quel est votre prénom ?` <- tolower(DFS_TPI$`Quel est votre prénom ?`)
DFS_TPI$`Quel est votre nom de famille ?` <- tolower(DFS_TPI$`Quel est votre nom de famille ?`)
# Erase test data (from before 25th of May)
DFS_TPI <- filter(DFS_TPI, DFS_TPI$Horodateur >= "2021-05-25")
panelist <- setClass("panelist", slots=c(surname="character", forname="character", aesthetic="numeric",
challenge="numeric", objective="numeric", narrative="numeric", social="numeric",
skill="numeric", awareness="numeric", goal="numeric", unambiguous="numeric", concentration="numeric",
control="numeric", loss="numeric", transformation="numeric", autotelic="numeric"))
panel_list_objective <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des zombies")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
panel_list_aesthetic <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Des portails")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
panel_list_narrative <- list()
for (i in 1:length(X5_Traits)){
param_DFS <- filter(DFS_TPI, DFS_TPI$`Quel est votre nom de famille ?` == X5_Traits$`Quel est votre nom de famille ?`[i] & DFS_TPI$`Qu'avez vous vu lors de l'expérience ?` == "Les recherches d'Isidore")
panel_list[paste("panel",i)] <- panelist(surname = X5_Traits$`Quel est votre nom de famille ?`[i], forname = X5_Traits$`Quel est votre prénom ?`[i],
aesthetic = X5_Traits$`Score Esthétique`[i], challenge = X5_Traits$`Score Défi`[i],
objective = X5_Traits$`Score Objectifs`[i], narrative = X5_Traits$`Score Narratif`[i],
social = X5_Traits$`Score Social`[i],
skill = param_DFS$`Challenge-Skill Balance (S)`, awareness = param_DFS$`Action Awareness (A)`,
goal = param_DFS$`Clear Goals (G)`, unambiguous = param_DFS$`Unambiguous Feedback (U)`,
concentration = param_DFS$`Concentration (C)`, control = param_DFS$`Sense of Control (O)`,
loss = param_DFS$`Loss of Self-Consciousness (L)`, transformation = param_DFS$`Time Transformation (T)`,
autotelic = param_DFS$`Autotelic experience (X)`)
}
library(readxl)
library(dplyr)
X5_Traits <- read_excel("5_Traits.xlsx")
DFS_TPI <- read_excel("DFS_TPI.xlsx")
X5_Traits <- read_excel("5_Traits.xlsx")
library(readxl)
X5_Traits <- read_excel("5_Traits.xlsx")
